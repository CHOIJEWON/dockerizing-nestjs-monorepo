name: Base CI CD

on:
  push:
    branches:
      - main
    paths:
      - 'apps/auth-api/**'
      - 'apps/cats/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Auth API
        if: contains(github.event.head_commit.message, '[auth-api]')
        run: |
          docker compose build auth-api
          docker tag auth-api:latest ${{ secrets.DOCKER_USERNAME }}/auth-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-api:latest

      - name: Build and Push Cat API
        if: contains(github.event.head_commit.message, '[cat-api]')
        run: |
          docker compose build cats-api
          docker tag cats-api:latest ${{ secrets.DOCKER_USERNAME }}/cats-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/cats-api:latest

      # 임시 주석
      # - name: Build and Push All
      # if: contains(github.event.head_commit.message, '[All]')
      #   run: |
      #     docker compose build
      #     docker tag dockerizing-monorepo-auth-api:latest choijewon/dockerizing-nestjs-monorepo-auth-api:latest
      #     docker push choijewon/dockerizing-nestjs-monorepo-auth-api:latest
      #     docker tag monorepo-cats-api

      - name: Deploy to dev
        uses: appleboy/ssh-action@master
        id: deploy-dev
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.HOST_DEV }} # EC2 퍼블릭 IPv4 DNS
          username: ${{ secrets.USERNAME }} # ubuntu
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            case "${{ github.event.head_commit.message }}" in
              *"[auth-api]"*)
                echo "Deploying auth-api..."
                # auth-api 컨테이너 중지 및 제거
                sudo docker stop auth-api || true
                sudo docker rm auth-api || true
                # 최신 auth-api 이미지 가져오기
                sudo docker pull ${{ secrets.DOCKER_USERNAME }}/auth-api:latest
                # 새로운 auth-api 컨테이너 실행
                sudo docker run -d --name auth-api -p 3300:3300 ${{ secrets.DOCKER_USERNAME }}/auth-api:latest
                ;;
              *"[cat-api]"*)
                echo "Deploying cats-api..."
                # cats-api 컨테이너 중지 및 제거
                sudo docker stop cats-api || true
                sudo docker rm cats-api || true
                # 최신 cats-api 이미지 가져오기
                sudo docker pull ${{ secrets.DOCKER_USERNAME }}/cats-api:latest
                # 새로운 cats-api 컨테이너 실행
                sudo docker run -d --name cats-api -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/cats-api:latest
                ;;
              *)
                echo "No specific API deployment keyword found in the commit message."
                ;;
            esac

            # 사용하지 않는 이미지를 정리
            sudo docker image prune -f
